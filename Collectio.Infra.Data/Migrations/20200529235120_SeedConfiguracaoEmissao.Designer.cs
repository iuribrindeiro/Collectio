// <auto-generated />
using System;
using Collectio.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Collectio.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200529235120_SeedConfiguracaoEmissao")]
    partial class SeedConfiguracaoEmissao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Collectio.Domain.CartaoCreditoAggregate.CartaoCredito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CpfCnpjProprietario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CpfCnpjProprietario");

                    b.HasIndex("OwnerId");

                    b.ToTable("CartaoCredito");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5dd3e230-85af-4b98-aa11-14da9026e6be"),
                            CpfCnpjProprietario = "71536108049",
                            DataCriacao = new DateTime(2020, 5, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Nome = "Proprietario C. Credito",
                            Numero = "5211********2071",
                            OwnerId = new Guid("ef2ccc70-c4f5-4f32-bb24-f9316013901c")
                        });
                });

            modelBuilder.Entity("Collectio.Domain.CartaoCreditoAggregate.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CobrancaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.HasIndex("CobrancaId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Transacao");
                });

            modelBuilder.Entity("Collectio.Domain.ClienteAggregate.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CartaoCreditoPadraoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartaoCreditoPadraoId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Collectio.Domain.CobrancaAggregate.ClienteCobranca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CobrancaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CobrancaId")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.HasIndex("TenantId");

                    b.ToTable("ClienteCobranca");
                });

            modelBuilder.Entity("Collectio.Domain.CobrancaAggregate.Cobranca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfiguracaoEmissaoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracaoEmissaoId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cobranca");
                });

            modelBuilder.Entity("Collectio.Domain.CobrancaAggregate.Pagamentos.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CobrancaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CobrancaId")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("Collectio.Domain.ConfiguracaoEmissaoAggregate.ConfiguracaoEmissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("ConfiguracaoEmissao");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a18db9b-90bb-42a6-9bb2-f3602a90dbb4"),
                            CpfCnpj = "71536108049",
                            DataCriacao = new DateTime(2020, 5, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "email@email.com",
                            NomeEmpresa = "Empresa Teste",
                            OwnerId = new Guid("ef2ccc70-c4f5-4f32-bb24-f9316013901c")
                        });
                });

            modelBuilder.Entity("Collectio.Domain.CartaoCreditoAggregate.CartaoCredito", b =>
                {
                    b.OwnsOne("Collectio.Domain.CartaoCreditoAggregate.StatusCartaoValueObject", "Status", b1 =>
                        {
                            b1.Property<Guid>("CartaoCreditoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("MensagemErro")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Status")
                                .HasColumnType("int");

                            b1.HasKey("CartaoCreditoId");

                            b1.ToTable("CartaoCredito");

                            b1.WithOwner()
                                .HasForeignKey("CartaoCreditoId");

                            b1.HasData(
                                new
                                {
                                    CartaoCreditoId = new Guid("5dd3e230-85af-4b98-aa11-14da9026e6be"),
                                    Status = 1
                                });
                        });
                });

            modelBuilder.Entity("Collectio.Domain.CartaoCreditoAggregate.Transacao", b =>
                {
                    b.HasOne("Collectio.Domain.CartaoCreditoAggregate.CartaoCredito", "CartaoCredito")
                        .WithMany("Transacoes")
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collectio.Domain.CartaoCreditoAggregate.StatusTransacaoCartaoValueObject", "Status", b1 =>
                        {
                            b1.Property<Guid>("TransacaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("MensagemErro")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Status")
                                .HasColumnType("int");

                            b1.HasKey("TransacaoId");

                            b1.ToTable("Transacao");

                            b1.WithOwner()
                                .HasForeignKey("TransacaoId");
                        });
                });

            modelBuilder.Entity("Collectio.Domain.CobrancaAggregate.ClienteCobranca", b =>
                {
                    b.HasOne("Collectio.Domain.CobrancaAggregate.Cobranca", "Cobranca")
                        .WithOne("ClienteCobranca")
                        .HasForeignKey("Collectio.Domain.CobrancaAggregate.ClienteCobranca", "CobrancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collectio.Domain.Base.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("ClienteCobrancaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Uf")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ClienteCobrancaId");

                            b1.ToTable("ClienteCobranca");

                            b1.WithOwner()
                                .HasForeignKey("ClienteCobrancaId");
                        });

                    b.OwnsOne("Collectio.Domain.Base.ValueObjects.Telefone", "Telefone", b1 =>
                        {
                            b1.Property<Guid>("ClienteCobrancaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Ddd")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ClienteCobrancaId");

                            b1.ToTable("ClienteCobranca");

                            b1.WithOwner()
                                .HasForeignKey("ClienteCobrancaId");
                        });

                    b.OwnsOne("Collectio.Domain.CobrancaAggregate.CartaoCreditoCobranca", "CartaoCreditoCobranca", b1 =>
                        {
                            b1.Property<Guid>("ClienteCobrancaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TenantId")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ClienteCobrancaId");

                            b1.ToTable("ClienteCobranca");

                            b1.WithOwner()
                                .HasForeignKey("ClienteCobrancaId");
                        });
                });

            modelBuilder.Entity("Collectio.Domain.CobrancaAggregate.Cobranca", b =>
                {
                    b.OwnsOne("Collectio.Domain.CobrancaAggregate.Transacao", "Transacao", b1 =>
                        {
                            b1.Property<Guid>("CobrancaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("FormaPagamento")
                                .HasColumnType("int");

                            b1.Property<int>("Status")
                                .HasColumnType("int");

                            b1.HasKey("CobrancaId");

                            b1.ToTable("Cobranca");

                            b1.WithOwner()
                                .HasForeignKey("CobrancaId");
                        });
                });

            modelBuilder.Entity("Collectio.Domain.CobrancaAggregate.Pagamentos.Pagamento", b =>
                {
                    b.HasOne("Collectio.Domain.CobrancaAggregate.Cobranca", null)
                        .WithOne("Pagamento")
                        .HasForeignKey("Collectio.Domain.CobrancaAggregate.Pagamentos.Pagamento", "CobrancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Collectio.Domain.ConfiguracaoEmissaoAggregate.ConfiguracaoEmissao", b =>
                {
                    b.OwnsOne("Collectio.Domain.Base.ValueObjects.AgenciaConta", "AgenciaConta", b1 =>
                        {
                            b1.Property<Guid>("ConfiguracaoEmissaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Agencia")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Conta")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ConfiguracaoEmissaoId");

                            b1.ToTable("ConfiguracaoEmissao");

                            b1.WithOwner()
                                .HasForeignKey("ConfiguracaoEmissaoId");

                            b1.HasData(
                                new
                                {
                                    ConfiguracaoEmissaoId = new Guid("5a18db9b-90bb-42a6-9bb2-f3602a90dbb4"),
                                    Agencia = "3238",
                                    Conta = "52841"
                                });
                        });

                    b.OwnsOne("Collectio.Domain.Base.ValueObjects.Telefone", "Telefone", b1 =>
                        {
                            b1.Property<Guid>("ConfiguracaoEmissaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Ddd")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ConfiguracaoEmissaoId");

                            b1.ToTable("ConfiguracaoEmissao");

                            b1.WithOwner()
                                .HasForeignKey("ConfiguracaoEmissaoId");

                            b1.HasData(
                                new
                                {
                                    ConfiguracaoEmissaoId = new Guid("5a18db9b-90bb-42a6-9bb2-f3602a90dbb4"),
                                    Ddd = "85",
                                    Numero = "996422022"
                                });
                        });

                    b.OwnsOne("Collectio.Domain.ConfiguracaoEmissaoAggregate.StatusConfiguracaoEmissaoValueObject", "Status", b1 =>
                        {
                            b1.Property<Guid>("ConfiguracaoEmissaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("MensagemErro")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Status")
                                .HasColumnType("int");

                            b1.HasKey("ConfiguracaoEmissaoId");

                            b1.ToTable("ConfiguracaoEmissao");

                            b1.WithOwner()
                                .HasForeignKey("ConfiguracaoEmissaoId");

                            b1.HasData(
                                new
                                {
                                    ConfiguracaoEmissaoId = new Guid("5a18db9b-90bb-42a6-9bb2-f3602a90dbb4"),
                                    Status = 1
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
